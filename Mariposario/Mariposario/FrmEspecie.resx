<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnEliminar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAGYktHRAD/AP8A/6C9p5MAAAAJdnBBZwAAABAAAAAQAFzGrcMAAAAldEVYdGRhdGU6Y3JlYXRl
        ADIwMDktMDktMTNUMTU6NTI6MjQrMDI6MDDWrdBIAAAAJXRFWHRkYXRlOm1vZGlmeQAyMDA5LTA5LTEz
        VDE1OjUyOjI0KzAyOjAwp/Bo9AAAAxpJREFUOE9VkltIVFEUhvcMgZpnLs5xvIC3sQdHH0Zz1GwCmYI8
        U+RDkimE2Sj2EggJ9lDhNU0dTTM17znOjHmnixesKIpQtKeeJB/K0FRK6UJkVLD712kKOvCx11nr/9fa
        ++zDppKT2X2z2f+BxVL5yGJ5PidJWXx1VbFUWMj+Pkv5+Ww3XuYl6dhji+XZQ4vFMZ2Sop5NTWVsIjHR
        915SUsWIwfB9KCSETxqNa/Pp6cc552z57Fm2XFDALsC8IEnSTGzsm5HQUD5qMPyYNJsdd5OS/NlwbOxh
        V0TEp35R5J7AQD4SFMRnjMb1hfT0TGpyHeYXkmSbjYtbGQsO5rf1ej4ArTs8/OtIXFwm69brk7tF8e0t
        JF1oQIJRCNHkHaYeX7TZZPM4csNo7kGdhvWI4kaPXm9l1Wq1okunO9kriptUcKPJEDWBeCom5v200bhB
        k8k8SNNR7xPFbTQ406bVKhnMrEWjUSCRjcKm09uExLQbakYrTSYzdrqNYfYOUVRi53++MwWdoig3QXGD
        juOEmAx0LFppdxiwRWbolFj/3ZIcjJtMbKmoSOmKiqrtgQECMshQDBNHrfVpRsauiYSE/82LeXksE6np
        Q4dszj17Xt/U6XgH6PRCMeX6o6PXpg4elK94Ef+G/Mzn5jIJ612r1dYTHb3SrNXyFnADtHqhmHLXQbfB
        sH7HapWveN5uZywL5rG0NKk9KmqlXq3mDtAIrmk0vEmj+Qw+UtwIGpAnTVtk5PpoWpq8E9YXH29qDg9/
        VSUIvBpcVal4LahTqbbRzA5y6lWqTbzLNdJcAU1hYSu98fH7WY1Od6RSEL5U+PtzohKg2TaEdodKpWwR
        BEWNIGTDtFnlrcs6QdipCQjIZmU+PkK5n19ThZ/fT8ARfyj38TldzJjikkLBLuOIRwFyJ1BbJw34hbir
        zNdXy15yruguLTU3HDjwpM5k2mnJyZl0u1yFbo/nnNvtLpah2OMpaM3NHYfmmyM1da6zpGTfFrzMNTCw
        yzM0tNfldJ5ytrefdw8OXoSpClwDzV4orqIaNMWu/v5Tsgfe3/wqjLvWxTuNAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="btnActualizar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        2ibaNtlOLtdZzllev3zMTt2OaVdrN2JPt4+2P2Q/4qDmwHSoc3jiqOHIdmxwnHDSc0pwOub0wtnEme/c
        5jznYuOy3uW8K+Lq4Vro2u8m4xbiVun22F3dPc692X3Gw8Jjncd5T7Snt+duz2EvZS+WV6PXzAqrFetX
        9HiTvIO8K72f+Oj78H26fGHfFb57fB+u1FrJW9nhB/y8/Pb4PfLX8U/z/z4AE+AfUBXwNNA0MDewN4gS
        FBXUFPQm2Dm4JPhBiG6IMKQ7VDI0MrQxdC7MNaw0bGSV8ar1q66HK4RzwzsjsBGhEQ0Rs6vdVu9dPR5p
        EVkQObRGZ03WmqtrFdYmrT0TJRnFjDoZjY4Oi26K/sD0Y9YxZ2O8YqpjZlgurH2s52xHdhl7imPHKeVM
        xNrFlsZOxtnF7YmbineIL4+f5rpwK7kvEzwTahLmEv0SjyQuJIUltSbjkqOTT/FkeIm8nhSVlKyUgVSD
        1ILUkTSbtL1pM3xvfkM6lL4mvVNAFf1M9Ql1hVuFoxn2GVUZbzNDM09mSWfxsvqy9bN3ZE/kuOd8vQ61
        jrWuO1ctd3Pu6Hqn9bUboA0xG7o3amzM3zi+yWPT0c2EzYmbf8gzySvNe70lbEtXvnL+pvyxrR5bmwsk
        CvgFw9tst9VsR23nbu/fYb5j/45PhezCa0UmReVFH4pZxde+Mv2q4quFnbE7+0ssSw7uwuzi7Rra7bD7
        aKl0aU7p2B7fPe1l9LLCstd7o/ZeLV9WXrOPsE+4b6TCp6Jzv+b+Xfs/VMZX3qlyrmqtVqreUT13gH1g
        8KDjwZYa5ZqimveHuIfu1nrUttdp15UfxhzOOPy0PrS+92vG140NCg1FDR+P8I6MHA082tNo1djYpNRU
        0gw3C5unjkUeu/mN6zedLYYtta201qLj4Ljw+LNvo78dOuF9ovsk42TLd1rfVbdR2grbofbs9pmO+I6R
        zvDOgVMrTnV32Xa1fW/0/ZHTaqerzsieKTlLOJt/duFczrnZ86nnpy/EXRjrjup+cHHVxds9AT39l7wv
        Xbnsfvlir1PvuSt2V05ftbl66hrjWsd1y+vtfRZ9bT9Y/NDWb9nffsPqRudN65tdA8sHzg46DF645Xrr
        8m2v29fvrLwzMBQydHc4cnjkLvvu5L2key/vZ9yff7DpIfph4SOpR+WPlR7X/aj3Y+uI5ciZUdfRvidB
        Tx6Mscae/5T+04fx/Kfkp+UTqhONk2aTp6fcp24+W/1s/Hnq8/npgp+lf65+ofviu18cf+mbWTUz/pL/
        cuHX4lfyr468Xva6e9Z/9vGb5Dfzc4Vv5d8efcd41/s+7P3EfOYH7IeKj3ofuz55f3q4kLyw8Bv3hPP7
        MvrwcQAAAAZiS0dEAP8A/wD/oL2nkwAAAAl2cEFnAAAAEAAAABAAXMatwwAAACV0RVh0ZGF0ZTpjcmVh
        dGUAMjAwOS0wOS0xM1QxNjo0NzozOSswMjowMOG9yVwAAAAldEVYdGRhdGU6bW9kaWZ5ADIwMDktMDkt
        MTNUMTY6NDc6MzkrMDI6MDCQ4HHgAAACEElEQVQ4T2NgoCfYZGDAsE5Hh+Wqt7f4q+RkzpexscRbP9nU
        lKFeW5vzuK9vydva2psfqqsnnXVx4SfKhIkTJzG0TZvBtaR/QsPBoqJvL9va/l8LC3u11cTEmqABN1I4
        GF7ZMbAdn5xSv2Xj2h8rpkz9vy409P8KXd1Vc1VURPAacCOOieGCKwP74wa18g/rk75cXFf0f8vGlf+X
        9Pdvr1FXl2u2sIDrZwSyQBgOrscyMlzwAGquVar4sDzoy+/dPv+/LFL6f2pqxPZps+YpLZ89CUUzK5DH
        C8RCQCwKxKzXfYCa61UrPqwM+/Jrp/v/rwul/z9rFth0OY1F7k4ZB1aXMwNFuYFYR4KDwf56jWb9x9UR
        QM1uQM0yYM0XMznl7pby4Pb2ej8WhjnmDFyHCtV736yI+Pl7u/P/byCbWwQ2XcrilPv/Xw6kGWQRE7op
        nEABKT0DHcOD7d7TP64M+fJ7uyNQs9T/J00CWzZGsqtAXScMpEEY5AyQQWDAB8S2QGxYW5kee+Hgsk9v
        dyX+/7pA6v/1av79qcYsdkA5DSDWAmIFqAGgQIC7AmSaKhCz7dy8oP7Ghe3/dy3K+LetTPGchwoTKK2C
        EosOEEsAMReyzcjeYAdydM1MDXZ11MWeKs9y6LMylg0CimkCMSixgORRohlZM4jNCATSzMxMzizMDHpA
        viAQg5wJ9ye6BqrxAdA/uMQcvc4cAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="btnAgregar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAGYktHRAD/AP8A/6C9p5MAAAAJdnBBZwAAABAAAAAQAFzGrcMAAAAldEVYdGRhdGU6Y3JlYXRl
        ADIwMDktMTEtMDVUMTI6NDg6NDYrMDE6MDCGxqo9AAAAJXRFWHRkYXRlOm1vZGlmeQAyMDA5LTA4LTE0
        VDE1OjQ3OjQ4KzAyOjAwq4NnrgAAABl0RVh0U29mdHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAALb
        SURBVDhPdVJrSJNhFD7bYOKYiZnhZSTNYT9MKC2RlNGFLDUtQYOiH1Fg5h8JB1mGGjqcmFZ46dtm3+b8
        IVlZKgmhWSjOOW9Tp0FFGsOC/ohJpimezpkKIvTCw57vuXycvd8B2DzR+QCqbFBkPd6bWfjySGt118mF
        6i4t6t8cwtvPwxeumnxbUyshM/EeKI6XbLU2f5MN/nC0AIJ0zTE1HVO58/bvOdg9cwY7PyVg+8c4fDER
        g2Z7FL0ocP5ijaTm5H0ISjZslk+XyiA6DwIKWmJtvd9urX/wpKB1aBcK/RKs7QWs7QM02qUoDirRNqTB
        ss6w9Ut1Upv2LgSc1W+8RHKlbo/u1eTl1bcziSgMyFCwA5odCnz/5YYXzIUBQJNDhk0jaixqC1698AB0
        3IXYPNCUdcRMd8+moNkpR8EBXliGw3Bx2eMFc9aMBM6IzkjMsSqmE3SggXSDPNfUn7DUMhWBTwYB6wm1
        FGwYUuHiypwXzFljT3ACNo4GY3F7yFKyHnIho1Jeb3XGo9Xlj6ZhX+z5mo0OTwkOz1XhytovL5izxp6Z
        MuKoEqu61ZhWAfWQXgFGoT8aRZcSLa5QXFiewf8d9jjzdEyBD3s0mGYAI5wrB+ERPYjjfmgeowlmaYI5
        muDHtgmIs8YeZ8RxmuCdGrkLp+6Arrgt5E/jRDAKLvqfY3QHo3QH49vugDhr7HGGs9zhLkRlweHsBt/P
        lpFINE/K0ThOIYLFTV/hL30FAnPW2OOMSFnuHKQu74EiqRD0Ra+D15om1Why0x5MUtBNe+ChPSAwZ409
        G2U4yx3uwioChGtBnVEu7eAts03QfUwr0TglxXo3jU1gzlojeZzhLHe4u3Uk+09AVGqJ5Jmueffvmr4I
        um0N2twbYM5aPnmc4ax3C3ccaeABUMVdg5vnS2Vt142K2RzR7yeDOWvscYZ60p3l7c8+firYFxoPWtUx
        SGIwZ41CPjuL/wBCuP3R7yhWJwAAAABJRU5ErkJggg==
</value>
  </data>
</root>